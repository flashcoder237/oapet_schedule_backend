# Generated by Django 5.1.7 on 2025-10-09 12:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0002_teacherunavailability_teacherpreference'),
        ('schedules', '0002_schedule_approved_at_schedule_approved_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SessionFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('confirmation', 'Confirmation'), ('issue', 'Problème'), ('suggestion', 'Suggestion')], max_length=15)),
                ('issue_type', models.CharField(blank=True, choices=[('room_problem', 'Problème de salle'), ('equipment_issue', "Problème d'équipement"), ('timing_issue', 'Problème de timing'), ('student_attendance', 'Problème de présence étudiants'), ('other', 'Autre')], max_length=20)),
                ('description', models.TextField()),
                ('severity', models.CharField(blank=True, choices=[('low', 'Faible'), ('medium', 'Moyenne'), ('high', 'Élevée'), ('critical', 'Critique')], default='medium', max_length=10)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_session_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_feedbacks', to='schedules.schedulesession')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_feedbacks', to='courses.teacher')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['teacher', 'feedback_type'], name='courses_ses_teacher_af67f5_idx'), models.Index(fields=['session', 'is_resolved'], name='courses_ses_session_dd0caf_idx')],
            },
        ),
        migrations.CreateModel(
            name='TeacherScheduleRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('schedule_change', 'Changement de créneau'), ('room_change', 'Changement de salle'), ('session_cancellation', 'Annulation de session'), ('additional_session', 'Session supplémentaire'), ('time_swap', 'Échange de créneaux'), ('other', 'Autre')], max_length=25)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('under_review', "En cours d'examen"), ('approved', 'Approuvée'), ('rejected', 'Rejetée'), ('completed', 'Complétée')], default='pending', max_length=15)),
                ('current_situation', models.TextField(help_text='Description de la situation actuelle')),
                ('requested_change', models.TextField(help_text='Description du changement demandé')),
                ('reason', models.TextField(help_text='Raison de la demande')),
                ('change_data', models.JSONField(default=dict, help_text='Données structurées du changement (nouveau créneau, nouvelle salle, etc.)')),
                ('priority', models.CharField(choices=[('low', 'Basse'), ('medium', 'Moyenne'), ('high', 'Haute'), ('urgent', 'Urgente')], default='medium', max_length=10)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_schedule_requests', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modification_requests', to='schedules.schedulesession')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_requests', to='courses.teacher')),
            ],
            options={
                'ordering': ['-created_at', '-priority'],
                'indexes': [models.Index(fields=['teacher', 'status'], name='courses_tea_teacher_e134a3_idx'), models.Index(fields=['status', 'priority'], name='courses_tea_status_027e74_idx')],
            },
        ),
    ]
